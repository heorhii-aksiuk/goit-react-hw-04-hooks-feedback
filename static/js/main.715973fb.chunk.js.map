{"version":3,"sources":["components/Statistic/Statistic.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","this","props","className","s","container","Component","Section","title","section","Statistic","good","neutral","bad","total","positivePercentage","list","item","FeedbackOptions","onLeaveFeedback","button","name","type","onClick","e","target","Notification","message","notifaction","App","state","handleIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","options","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.715973fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistic_list__3s6Je\",\"item\":\"Statistic_item__1pTUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3gjhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1gN3z\",\"title\":\"Section_title__3Ild_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Govm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifaction\":\"Notification_notifaction__WYVTY\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\n\nclass Container extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    const { children } = this.props;\n    return <div className={s.container}>{children}</div>;\n  }\n}\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section className={s.section}>\n        <h2 className={s.title}>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Statistic.module.css';\n\nclass Statistic extends Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={s.list}>\n        <li className={s.item}>Good: {good}</li>\n        <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    );\n  }\n}\n\nexport default Statistic;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  static propTypes = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { onLeaveFeedback } = this.props;\n    return (\n      <>\n        <button\n          className={s.button}\n          name=\"good\"\n          type=\"button\"\n          onClick={e => onLeaveFeedback(e.target.name)}\n        >\n          Good\n        </button>\n        <button\n          className={s.button}\n          name=\"neutral\"\n          type=\"button\"\n          onClick={e => onLeaveFeedback(e.target.name)}\n        >\n          Neutral\n        </button>\n        <button\n          className={s.button}\n          name=\"bad\"\n          type=\"button\"\n          onClick={e => onLeaveFeedback(e.target.name)}\n        >\n          Bad\n        </button>\n      </>\n    );\n  }\n}\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nclass Notification extends Component {\n  static propTypes = {\n    message: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { message } = this.props;\n    return <p className={s.notifaction}>{message}</p>;\n  }\n}\n\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport Statistic from './components/Statistic/Statistic';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  handleIncrement = name => {\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    return good === 0 ? 0 : Math.round((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <Container>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistic\">\n          {total === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}